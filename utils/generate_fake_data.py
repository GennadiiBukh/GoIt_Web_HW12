from faker import Faker
import random
from passlib.context import CryptContext
from sqlalchemy.orm import Session

from src.database.db import SessionLocal
from src.database.models import Contact, User

def generate_fake_users(n):
    fake = Faker('uk_UA')
    pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")
    db = SessionLocal()

    # Очищення існуючих контактів і користувачів
    db.query(Contact).delete()
    db.query(User).delete()

    user_ids = []
    for _ in range(n):
        email = fake.email()
        hashed_password = pwd_context.hash("password")  # Безпечне хешування
        user = User(email=email, hashed_password=hashed_password)
        db.add(user)
    db.commit()

    # Зберігаємо ідентифікатори користувачів
    users = db.query(User.id).all()
    user_ids = [user.id for user in users]
    return user_ids


def generate_fake_contacts(n, user_ids):
    fake = Faker('uk_UA')
    db = SessionLocal()

    # Очищення існуючих контактів
    db.query(Contact).delete()

    # Додавання фейкових контактів
    for _ in range(n):
        user_id = random.choice(user_ids)
        contact = Contact(
            first_name=fake.first_name(),
            last_name=fake.last_name(),
            email=fake.email(),
            phone_number=fake.phone_number(),
            birthday=fake.date_of_birth(),
            additional_data="Generated by Faker",
            user_id=user_id
        )
        db.add(contact)

    db.commit()
    db.close()

if __name__ == "__main__":
    users = generate_fake_users(3)  # Генерувати 3 фейкових користувачів
    generate_fake_contacts(100, users)  # Генерувати 100 фейкових контактів
